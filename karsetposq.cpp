#include <iostream>
#include <KAR/KARoperator.h>//順番に気をつけろ(opencvとか　よりうしろ)

// 2023/11/15
//---------------------------------------------------------------
struct ROBOT{
    float rail;
    float x;
    float y;
    float z;
    float q_x;
    float q_y;
    float q_z;
    float q_w;
};
ROBOT robot;
//-----------------------------------------------------------

int main(){
    KAROperator ks;
    VectorXd posq(8);//手先姿勢位置(rail,x,y,z,q_x,q_y,q_z,q_w)
    double time = 5.0;//移動時間
    /////////////////////////////////////////////////////////////
    
    //////////////////////////////////////////////////////////////

    //posq << 0.8,0.4,0.1,0.33,0,0,1,0;//(rail,x,y,z,q_x,q_y,q_z,q_w)
    //一番端で　J4 60度 J3 90度での位置は0.0547764 , 0.477338 , -0.00177406 , 0.39298 , 0.00896647 , 0.355652 , 0.93457 , -0.00304448


    //posq << 0.192382 , 0.58222 , -0.0107335 , 0.23158 , 0.0050169 , 0.653521 , 0.755613 , -0.0439775;

   //posq<<0.238523 , 0.540876 , -0.00135498 , 0.380862 , 0.00729992 , 0.352299 , 0.935856 , -0.00217665
//;

  //  ks.setq(time,posq);
    //    sleep(5);
   posq<<0.457131 , 0.598893 , -0.00215997 , 0.17301 , 0.00614736 , 0.644288 , 0.764746 , -0.00442782;
    ks.setq(time,posq);
        sleep(5); 

        posq<<0.457131 , 0.598893 , -0.00215997 , 0.17301 ,
    ks.setq(time,posq);
        sleep(5);  

           posq<<0.457131 , 0.598893 , -0.00215997 , 0.17301 , 
    ks.setq(time,posq);
        sleep(5);     





   posq<<0.450343,
0.596179,
-0.0013211,
0.22661,
0.00729062,
0.346275,
0.938102,
-0.00209891
;

    ks.setq(time,posq);
        sleep(5);      

   posq<<
0.447617,
0.460358,
-0.00945182,
0.162313,
0.0205272,
0.621174,
0.783012,
-0.0247737
;

    ks.setq(time,posq);
        sleep(5);

   posq<<
0.447617,
0.460359,
-0.00945174,
0.162313,
0.02053,
0.621174,
0.783012,
-0.0247711
;

    ks.setq(time,posq);
        sleep(5);     

   posq<<0.447617,
0.460359,
-0.00945164,
0.162314,
0.0205288,
0.621173,
0.783013,
-0.0247716
;

    ks.setq(time,posq);
        sleep(5);     

   posq<<0.447617,
0.446455,
-0.00945494,
0.162349,
0.0205811,
0.621908,
0.782429,
-0.0247436
;

    ks.setq(time,posq);
        sleep(5);     

   posq<<0.447617,
0.44421,
-0.00945361,
0.162414,
0.0206124,
0.62204,
0.782324,
-0.0247128
;

    ks.setq(time,posq);
        sleep(5);     

   posq<<0.447617,
0.436305,
-0.00944932,
0.162327,
0.0204984,
0.622468,
0.781984,
-0.0247843
;

    ks.setq(time,posq);
        sleep(5);     

   posq<<0.447617,
0.43575,
-0.00945539,
0.164354,
0.0206226
,0.622517,
0.781944,
-0.0247119
;

    ks.setq(time,posq);
        sleep(5);     

   posq<<0.447609
,0.379838
,-0.00945517
,0.252672
,0.0205346
,0.626035
,0.77913
,-0.0247777
;

    ks.setq(time,posq);
        sleep(5);     

   posq<<0.44761
,0.38749
,-0.00945903
,0.252846
,0.0200522
,0.625542
,0.779526
,-0.0251821
;

    ks.setq(time,posq);
        sleep(5);     

   posq<<0.447613
,0.501769
,-0.00945298
,0.252259
,0.0203963
,0.619256
,0.784529
,-0.0248843
;

    ks.setq(time,posq);
        sleep(5);     

   posq<<0.447617
,0.501837
,-0.00944588
,0.195441
,0.0205712
,0.61926
,0.784527
,-0.0247154
;

    ks.setq(time,posq);
        sleep(5);     

   posq<<0.447618
,0.501826
,-0.00944634
,0.18893
,0.0205126
,0.61927
,0.784519
,-0.0247636
;

    ks.setq(time,posq);
        sleep(5);     

   posq<<0.447617
,0.490331
,-0.0094412
,0.181754
,0.0206916
,0.619774
,0.784121
,-0.0245992
;

    ks.setq(time,posq);
        sleep(5);     

   posq<<0.447617
,0.482777
,-0.00945311
,0.171067
,0.0205597
,0.620086
,0.783874
,-0.0247548
;

    ks.setq(time,posq);
        sleep(5);     

   posq<<0.447617
,0.477707
,-0.00944538
,0.170863
,0.0205949
,0.620343
,0.783671
,-0.024693
;

    ks.setq(time,posq);
        sleep(5);     

   posq<<0.447616
,0.461175
,-0.00944951
,0.170795
,0.0205258
,0.621141
,0.783039
,-0.0247648
;

    ks.setq(time,posq);
        sleep(5);     

   posq<<0.447616
,0.461443
,-0.00943846
,0.170783
,0.0209572
,0.607612
,0.793582
,-0.024408
;

    ks.setq(time,posq);
        sleep(5);     









   posq<<0.447616
,0.46145
,-0.00925001
,0.170806
,0.0227843
,0.54518
,0.837701
,-0.0227301
;

    ks.setq(time,posq);
        sleep(5);     

   posq<<0.447616
,0.46143
,-0.00907103
,0.170804
,0.0236104
,0.512766
,0.857926
,-0.0218518
;

    ks.setq(time,posq);
        sleep(5);     

   posq<<0.447616
,0.461432
,-0.008841
,0.170797
,0.0244233
,0.479084
,0.877179
,-0.0209428
;

    ks.setq(time,posq);
        sleep(5);     

   posq<<0.447615
,0.461461
,-0.00856129
,0.170817
,0.0252535
,0.445107
,0.894898
,-0.0199794
;

    ks.setq(time,posq);
        sleep(5);     

   posq<<0.447615
,0.461461
,-0.00856129
,0.170817
,0.0252535
,0.445107
,0.894898
,-0.0199794
;

    ks.setq(time,posq);
        sleep(5);     

   posq<<0.447615
,0.46144
,-0.00837406
,0.170803
,0.025652
,0.425522
,0.904376
,-0.0194252
;

    ks.setq(time,posq);
        sleep(5);     

   posq<<0.447616
,0.461452
,-0.00837646
,0.166305
,0.0256628
,0.425685
,0.904299
,-0.0194262
;

    ks.setq(time,posq);
        sleep(5);     

   posq<<0.444274
,0.461333
,-0.00850477
,0.168139
,0.025502
,0.438538
,0.898134
,-0.0197568
;

    ks.setq(time,posq);
        sleep(5);     

   posq<<0.430389
,0.454075
,-0.00847769
,0.17205
,0.0253345
,0.436318
,0.899218
,-0.0197747
;

    ks.setq(time,posq);
        sleep(5);     

   posq<<0.431079
,0.454165
,-0.0084756
,0.170287
,0.0254023
,0.436375
,0.89919
,-0.0197329
;

    ks.setq(time,posq);
        sleep(5);     

   posq<<0.437842
,0.45422
,-0.00849173
,0.163283
,0.0254057
,0.436314
,0.899218
,-0.0197934
;

    ks.setq(time,posq);
        sleep(5);     

   posq<<0.439
,0.441864
,-0.00841581
,0.157626
,0.0256741
,0.429351
,0.902562
,-0.0195023
;

    ks.setq(time,posq);
        sleep(5);     

   posq<<0.438963
,0.441364
,-0.00841084
,0.157574
,0.0255547
,0.429069
,0.902698
,-0.0195453
;

    ks.setq(time,posq);
        sleep(5);     

   posq<<0.438964
,0.441344
,-0.00840906
,0.15758
,0.0255618
,0.429064
,0.902701
,-0.0195354
;

    ks.setq(time,posq);
        sleep(5);     

   posq<<0.4403
,0.417448
,-0.00833645
,0.203176
,0.0272642
,0.410075
,0.911449
,-0.0188435
;

    ks.setq(time,posq);
        sleep(5);     

   posq<<0.443347
,0.371263
,-0.00776217
,0.253809
,0.0266553
,0.368664
,0.929009
,-0.0178417
;

    ks.setq(time,posq);
        sleep(5);     

   posq<<0.443275
,0.400499
,-0.00781096
,0.253415
,0.0264645
,0.37122
,0.927992
,-0.0180429
;

    ks.setq(time,posq);
        sleep(5);     

   posq<<0.443289
,0.42703
,-0.0078455
,0.253452
,0.0264506
,0.375318
,0.926342
,-0.0180905
;

    ks.setq(time,posq);
        sleep(5);     

   posq<<0.443292
,0.451753
,-0.00809879
,0.253424
,0.0259247
,0.398008
,0.916823
,-0.0187917
;

    ks.setq(time,posq);
        sleep(5);     

   posq<<0.443291
,0.460697
,-0.00836938
,0.16141
,0.0260648
,0.409168
,0.911878
,-0.0195228
;

    ks.setq(time,posq);
        sleep(5);     














   // posq << 0.192382 , 0.58222 , -0.0107335 , 0.23158 , 0.0050169 , 0.653521 , 0.755613 , -0.0439775;//(rail,x,y,z,q_x,q_y,q_z,q_w)
    //sleep(10);
    //ks.setq(time,posq);
    
    //posq << 0.192382 , 0.58222 , -0.0107335 , 0.23158 , 0.0050169 , 0.653521 , 0.755613 , -0.0439775;//(rail,x,y,z,q_x,q_y,q_z,q_w)
    //sleep(10);
    //ks.setq(time,posq);
    
    //posq << 0.192382 , 0.58222 , -0.0107335 , 0.23158 , 0.0050169 , 0.653521 , 0.755613 , -0.0439775;

    
    //ks.setq(time,posq);

    //posq << 0.192382 , 0.58222 , -0.0107335 , 0.23158 , 0.0050169 , 0.653521 , 0.755613 , -0.0439775;//(rail,x,y,z,q_x,q_y,q_z,q_w)
    //sleep(10);
    //ks.setq(time,posq);
    
    //posq << 0.192382 , 0.58222 , -0.0107335 , 0.23158 , 0.0050169 , 0.653521 , 0.755613 , -0.0439775;//(rail,x,y,z,q_x,q_y,q_z,q_w)
    //sleep(10);
    //ks.setq(time,posq);
    
}

//0.204383 , 0.476719 , -0.00137161 , 0.389704 , 0.00725691 , 0.359338 , 0.933177 , -0.00220499



   // posq <<0.46864 , 0.500081 , -0.00211835 , 0.197797 , 0.0062943 , 0.616966 , 0.786954 , -0.00422123;
   // sleep(5);
    //ks.setq(time,posq);


// 0.311037 , 0.542007 , -0.000644983 , 0.21664 , 0.00752422 , 0.182187 , 0.983235 , -0.000837038
// 0.31,0.54,0.0,0.22,0,0,1,0